{"ast":null,"code":"import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"../config/firebaseConfig\";\nconst useAuth = redirectPath => {\n  const navigate = useNavigate();\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (!user) {\n        // Redirect to the specified path (login page)\n        navigate(redirectPath);\n      }\n    });\n\n    // Clean up the subscription when the component unmounts\n    return () => unsubscribe();\n  }, [navigate, redirectPath]);\n};\nexport default useAuth;","map":{"version":3,"names":["useEffect","useNavigate","onAuthStateChanged","auth","useAuth","redirectPath","navigate","unsubscribe","user"],"sources":["C:/Users/User/Projects-VSC/BudgetBuddy/BudgetBuddy/frontend/src/hooks/useAuth.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { auth } from \"../config/firebaseConfig\";\r\n\r\nconst useAuth = (redirectPath) => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      if (!user) {\r\n        // Redirect to the specified path (login page)\r\n        navigate(redirectPath);\r\n      }\r\n    });\r\n\r\n    // Clean up the subscription when the component unmounts\r\n    return () => unsubscribe();\r\n  }, [navigate, redirectPath]);\r\n};\r\n\r\nexport default useAuth;"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,kBAAkB,QAAQ,eAAe;AAClD,SAASC,IAAI,QAAQ,0BAA0B;AAE/C,MAAMC,OAAO,GAAIC,YAAY,IAAK;EAChC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMO,WAAW,GAAGL,kBAAkB,CAACC,IAAI,EAAGK,IAAI,IAAK;MACrD,IAAI,CAACA,IAAI,EAAE;QACT;QACAF,QAAQ,CAACD,YAAY,CAAC;MACxB;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,MAAME,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACD,QAAQ,EAAED,YAAY,CAAC,CAAC;AAC9B,CAAC;AAED,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}